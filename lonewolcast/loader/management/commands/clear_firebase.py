# clear_firebase.py
from django.core.management.base import BaseCommand
from firebase_admin import db
import time

class Command(BaseCommand):
    help = 'Efface toutes les donn√©es de la base Firebase'

    def add_arguments(self, parser):
        parser.add_argument(
            '--force',
            action='store_true',
            help='Force la suppression sans confirmation',
        )
        parser.add_argument(
            '--collection',
            type=str,
            help='Nom sp√©cifique de la collection √† vider (par d√©faut: matches)',
            default='matches'
        )

    def handle(self, *args, **options):
        collection = options['collection']
        force = options['force']
        
        self.stdout.write(
            self.style.WARNING(f'\n‚ö†Ô∏è  ATTENTION: Vous √™tes sur le point de supprimer toutes les donn√©es de la collection "{collection}"')
        )
        
        if not force:
            confirm = input('\n√ätes-vous s√ªr de vouloir continuer ? Cette action est irr√©versible. [y/N]: ')
            if confirm.lower() != 'y':
                self.stdout.write(self.style.SUCCESS('\nOp√©ration annul√©e'))
                return
            
            # Double confirmation pour plus de s√©curit√©
            confirm2 = input('\nTapez le nom de la collection pour confirmer la suppression: ')
            if confirm2 != collection:
                self.stdout.write(self.style.SUCCESS('\nOp√©ration annul√©e - le nom ne correspond pas'))
                return

        try:
            self.stdout.write('\nüóëÔ∏è  D√©but de la suppression...')
            start_time = time.time()
            
            # R√©cup√®re la r√©f√©rence et supprime les donn√©es
            ref = db.reference(collection)
            ref.delete()
            
            elapsed_time = time.time() - start_time
            self.stdout.write(
                self.style.SUCCESS(
                    f'\n‚úÖ Suppression r√©ussie en {elapsed_time:.1f} secondes'
                )
            )
            
        except Exception as e:
            self.stderr.write(
                self.style.ERROR(f'\n‚ùå Erreur lors de la suppression: {str(e)}')
            )